/*
Given an array with n objects colored red, white or blue, sort them in-place so that objects of the same color are adjacent, with the colors in the order red, white and blue.

Here, we will use the integers 0, 1, and 2 to represent the color red, white, and blue respectively.

Note: You are not suppose to use the library's sort function for this problem.

Example:

Input: [2,0,2,1,1,0]
Output: [0,0,1,1,2,2]
*/

class Solution {
    public void sortColors(int[] nums) {
        int left = 0;
        int right = nums.length - 1;
        int cur = 0;
        
        while (cur <= right && left < right) {
            while (right >= 0 && nums[right] == 2) right--;
            while (left < nums.length && nums[left] == 0) left++;
            
            if (right < 0 || left >= nums.length) return;
            
            if (nums[cur] == 0 && left < cur) {
                int temp = nums[left];
                nums[left++] = nums[cur];
                nums[cur] = temp;
            } else if (nums[cur] == 2) {
                int temp = nums[right];
                nums[right--] = nums[cur];
                nums[cur] = temp;
            } else {
                cur++;
            }
        }
    }
}

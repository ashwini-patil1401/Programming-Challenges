class Solution {
    
    public int binSearch(int[] nums, int start, int end, int target) {
    
        int mid = (end + start)/2;
    
        if(nums[mid] == target){
            return mid;
        }
        
        if(mid == start && mid==end){
            return mid+1;
        }
        
        if(mid>0 && nums[mid-1]<target && nums[mid]>target){
            return mid;
        }
        
        if(mid<nums.length && nums[mid]<target && nums[mid+1]>target){
            return mid+1;
        }
        
        if(nums[mid] < target){
            start = mid+1;
        } else if(nums[mid] > target){
            end = mid-1;
        }
        
        return binSearch(nums, start, end, target);
    }
    
    public int searchInsert(int[] nums, int target) {
            
        if(nums.length == 0 || target<nums[0])
            return 0;
        else if(target>nums[nums.length-1])
            return nums.length;
        else {
            return binSearch(nums, 0, nums.length-1, target);
        }
    }
}
